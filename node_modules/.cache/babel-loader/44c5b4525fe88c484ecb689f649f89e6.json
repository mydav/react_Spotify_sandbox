{"ast":null,"code":"var _jsxFileName = \"/Users/vadymbardukov/Dropbox/projects/Strive/strive/first_react/new_netflix/src/components/Home.jsx\";\nimport React from 'react';\nimport { Row } from 'reactstrap';\nimport List from './List';\nimport '../../main-page.css';\nimport { GuardSpinner } from \"react-spinners-kit\";\nvar artists = [\"Radiohead\", \"Moderat\", \"Massive Attack\"];\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      tracks: \"\"\n    };\n\n    this.componentDidMount = async () => {\n      setTimeout(async () => {\n        await this.fetchingMusic();\n      }, 2000);\n    };\n\n    this.fetchingMusic = async () => {\n      this.setState({\n        loading: true\n      });\n      artists.forEach(async artist => {\n        let response = await fetch(\"https://deezerdevs-deezer.p.rapidapi.com/search?q=\" + artist + \"&limit=5\", {\n          headers: {\n            \"x-rapidapi-host\": \"deezerdevs-deezer.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"27579eb660msh15a2248514f7b35p1ae83djsnf94b95f7dc4d\"\n          },\n          method: \"GET\"\n        });\n        let musicInfo = await response.json();\n        this.setState({\n          tracks: [...this.state.tracks, {\n            tracks: musicInfo.data,\n            title: artist\n          }],\n          loading: false\n        });\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state.tracks);\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"home-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.state.loading && React.createElement(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: \"40%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(GuardSpinner, {\n      className: \"spinner-spotify\",\n      size: 60,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    })), this.state.tracks && this.state.tracks.map((track, index) => React.createElement(MusicList, {\n      tracks: track,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/vadymbardukov/Dropbox/projects/Strive/strive/first_react/new_netflix/src/components/Home.jsx"],"names":["React","Row","List","GuardSpinner","artists","Home","Component","state","loading","tracks","componentDidMount","setTimeout","fetchingMusic","setState","forEach","artist","response","fetch","headers","method","musicInfo","json","data","title","render","console","log","position","top","left","transform","map","track","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,qBAAP;AACA,SAASC,YAAT,QAA6B,oBAA7B;AAEA,IAAIC,OAAO,GAAG,CAAC,WAAD,EAAc,SAAd,EAAyB,gBAAzB,CAAd;;AAEA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAkC;AAAA;AAAA;AAAA,SAC9BC,KAD8B,GACtB;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KADsB;;AAAA,SAsB9BC,iBAtB8B,GAsBV,YAAW;AAC3BC,MAAAA,UAAU,CAAC,YAAW;AAClB,cAAM,KAAKC,aAAL,EAAN;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KA1B6B;;AAAA,SA4B9BA,aA5B8B,GA4Bd,YAAW;AACvB,WAAKC,QAAL,CAAc;AACVL,QAAAA,OAAO,EAAC;AADE,OAAd;AAGAJ,MAAAA,OAAO,CAACU,OAAR,CAAgB,MAAMC,MAAN,IAAiB;AAC7B,YAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAuDF,MAAvD,GAAgE,UAAjE,EAA6E;AACnGG,UAAAA,OAAO,EAAE;AACL,+BAAmB,kCADd;AAEL,8BAAkB;AAFb,WAD0F;AAKnGC,UAAAA,MAAM,EAAE;AAL2F,SAA7E,CAA1B;AAOA,YAAIC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAtB;AACA,aAAKR,QAAL,CAAc;AACVJ,UAAAA,MAAM,EAAE,CAAC,GAAG,KAAKF,KAAL,CAAWE,MAAf,EAAuB;AAC3BA,YAAAA,MAAM,EAAEW,SAAS,CAACE,IADS;AAE3BC,YAAAA,KAAK,EAAER;AAFoB,WAAvB,CADE;AAKVP,UAAAA,OAAO,EAAE;AALC,SAAd;AAOH,OAhBD;AAiBH,KAjD6B;AAAA;;AAK9BgB,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWE,MAAvB;AACA,WACI,0CACA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKF,KAAL,CAAWC,OAAX,IAAsB;AAAK,MAAA,KAAK,EAAI;AAACmB,QAAAA,QAAQ,EAAE,OAAX;AAAoBC,QAAAA,GAAG,EAAE,KAAzB;AAAgCC,QAAAA,IAAI,EAAE,KAAtC;AAA6CC,QAAAA,SAAS,EAAE;AAAxD,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgG,oBAAC,YAAD;AAAe,MAAA,SAAS,EAAC,iBAAzB;AAA2C,MAAA,IAAI,EAAE,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhG,CADvB,EAEC,KAAKvB,KAAL,CAAWE,MAAX,IAAqB,KAAKF,KAAL,CAAWE,MAAX,CACjBsB,GADiB,CACb,CAACC,KAAD,EAAQC,KAAR,KAAkB,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAED,KAAnB;AAA0B,MAAA,GAAG,EAAEC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,CAFtB,CADJ,CADA,CADJ;AAYH;;AAnB6B;;AAoDlC,eAAe5B,IAAf","sourcesContent":["import React from 'react'\nimport {Row} from 'reactstrap'\nimport List from './List'\nimport '../../main-page.css'\nimport { GuardSpinner } from \"react-spinners-kit\";\n\nvar artists = [\"Radiohead\", \"Moderat\", \"Massive Attack\"]\n\nclass Home extends React.Component{\n    state = { \n        loading: true,\n        tracks: \"\"\n    }\n    render() {\n        console.log(this.state.tracks)\n        return (\n            <>\n            <div className=\"home-container\">\n                <Row>\n                {this.state.loading && <div style = {{position: \"fixed\", top: \"40%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}><GuardSpinner  className=\"spinner-spotify\" size={60} /></div>}\n                {this.state.tracks && this.state.tracks\n                    .map((track, index) => <MusicList tracks={track} key={index} />)\n                }\n                </Row>\n            </div>\n            </>\n        )\n    }\n\n\n    componentDidMount = async() => {\n        setTimeout(async() => {\n            await this.fetchingMusic()\n        }, 2000);\n    }\n\n    fetchingMusic = async() => {\n        this.setState({\n            loading:true,\n        })\n        artists.forEach(async(artist) => {\n            let response = await fetch(\"https://deezerdevs-deezer.p.rapidapi.com/search?q=\" + artist + \"&limit=5\", {\n                headers: {\n                    \"x-rapidapi-host\": \"deezerdevs-deezer.p.rapidapi.com\",\n                    \"x-rapidapi-key\": \"27579eb660msh15a2248514f7b35p1ae83djsnf94b95f7dc4d\"\n                },\n                method: \"GET\"\n            })\n            let musicInfo = await response.json()\n            this.setState({\n                tracks: [...this.state.tracks, {\n                    tracks: musicInfo.data,\n                    title: artist\n                }],\n                loading: false\n            })\n        })\n    }\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}